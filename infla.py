# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dmVQ10dcn2wPYAwlarvec0LHCmbOhcEj
"""

import pandas as pd
import matplotlib as plt
import numpy as np
import requests
from datetime import datetime

from dotenv import load_dotenv

import gspread
from google.oauth2.service_account import Credentials
from gspread_dataframe import set_with_dataframe

import os 

load_dotenv()

file_path = './registro/'
os.makedirs(os.path.dirname(file_path), exist_ok=True)

# Ruta a tu archivo credentials.json
SERVICE_ACCOUNT_FILE = os.getenv("GOOGLE_SHEETS_CREDENTIALS_PATH")

# Ámbitos necesarios
SCOPES = ['https://www.googleapis.com/auth/spreadsheets']

creds = Credentials.from_service_account_file(SERVICE_ACCOUNT_FILE, scopes=SCOPES)
gc = gspread.authorize(creds)

def get_monthly_inflation():
  inflation_url = "https://api.bcra.gob.ar/estadisticas/v3.0/monetarias/27?limit=100&desde=2025-01-01&hasta=2026-06-01"
  r = requests.get(inflation_url, verify=False)

  if r.status_code != 200:
    raise Exception("Error al obtener los datos del BCRA")

  json = r.json()
  data = json["results"]
  ''' Índice acumulado = (1 + inf1) × (1 + inf2) × (1 + inf3) × ... '''

  inflacion_acumulada = []
  indice = 1

  for item in data:
      data.sort(key= lambda x: x['fecha'])

      inflacion = item['valor'] / 100
      indice *= (1 + inflacion)
      acumulado= round((indice - 1) * 100, 2)
      inflacion_acumulada.append(acumulado)


  df = pd.DataFrame(data)
  df['fecha'] = pd.to_datetime(df['fecha'])
  df['inflacion_acumulada_%'] = inflacion_acumulada
  df = df.rename(columns={'valor': 'inflacion mensual'})
  df = df[['fecha', 'inflacion mensual', 'inflacion_acumulada_%']].sort_values('fecha')

  exec_date = datetime.now().strftime('%y-%m-%d')

  df.to_excel(f'registro/inflacion_{exec_date}.xlsx', index=False)
  print("Datos cargados con exito")

  return df

get_monthly_inflation()

spreadsheet_id = os.getenv("SPREADSHEET_ID") 

sh = gc.open_by_key(spreadsheet_id)

worksheet = sh.worksheet('bcra_data')

set_with_dataframe(worksheet, get_monthly_inflation())
